from flask_wtf import FlaskForm
from wtforms import (
    StringField, SubmitField, ValidationError, BooleanField, IntegerField
)
from wtforms.fields.html5 import DateField
from wtforms.validators import DataRequired, URL, Optional

from .models import Link


class QuickLinkForm(FlaskForm):
    redirect = StringField('URL', validators=[DataRequired(), URL()])
    submit = SubmitField('Generate')


class LinkForm(FlaskForm):
    id = IntegerField('id')
    link = StringField('Link', render_kw={'placeholder': 'Autogenerated'})
    redirect = StringField('Target', validators=[DataRequired(), URL()])
    expiration = DateField('Expiration date', validators=[Optional()])
    activated = BooleanField('Active?')
    track_requests = BooleanField('Track requests?')
    submit = SubmitField('Submit')

    def validate_link(self, field: StringField):
        """Performs validation on the link StringField. If a link is provided,
        confirms that it is not in use. If the field is empty, generate a
        unique value.

        Args:
            field (StringField): an instance of a WTForms StringField.

        Raises:
            ValidationError: the link value provided is already in use, or
                contains illegal characters.
        """
        if field.data:
            link = Link.active_with_link(field.data, include_expiration=True) \
                .filter(Link.id != self.id.data) \
                .first()
            if link:
                raise ValidationError('This link is already in use.')

            if not all(char in Link.VALID_CHARS for char in field.data):
                raise ValidationError('The link contains invalid characters')
        else:
            field.data = Link.unique_link()
